spring:
  profiles:
    active:
      - dev
    include: secret-key
  sql:
    init:
      mode: always # 서버 시작시 항상 classpath의 sql문을 실행하도록 설정
      continue-on-error: true # 서버 시작시 sql문을 실행할 때 오류 무시하고 계속 진행
      schema-locations: classpath:db/schema.sql # 서버 시작시 ddl sql문을 실행할 위치 및 파일 지정
      data-locations: classpath:db/data.sql # 서버 시작시 dml sql문을 실행할 위치 및 파일 지정

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  redis:
    host: localhost
    port: 6379

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google.client-id}
            client-secret: ${google.client-secret}
            scope:
              - email
              - profile

          kakao:
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secret}
            redirect-uri: ${kakao.redirect-url}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email

          naver:
            client-id: ${naver.client-id}
            client-secret: ${naver.client-secret}
            redirect-uri: ${naver.redirect-url}
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

springdoc:
  packages-to-scan: kr.ac.kumoh.illdang100.tovalley
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: swagger-ui.html            # Swagger UI 경로 => localhost:8000/swagger-ui.html
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  cache:
    disabled: true

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
