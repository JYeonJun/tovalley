server:
  port: 8080
  servlet:
    encoding:
      charset: utf-8
      force: true

spring:
  datasource:
    url: jdbc:mariadb://${rds.hostname}:3306/${rds.db.name}
    driver-class-name: org.mariadb.jdbc.Driver
    username: ${rds.username}
    password: ${rds.password}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      '[hibernate.default_batch_fetch_size]': 100

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  redis:
    host: localhost
    port: 6379

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google.clientId}
            client-secret: ${google.clientSecret}
            redirect-uri: ${google.redirectUrl}
            scope:
              - email
              - profile

          kakao:
            client-id: ${kakao.clientId}
            client-secret: ${kakao.clientSecret}
            redirect-uri: ${kakao.redirectUrl}
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email

          naver:
            client-id: ${naver.clientId}
            client-secret: ${naver.clientSecret}
            redirect-uri: ${naver.redirectUrl}
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

#cloud:
#  aws:
#    credentials:
#      accessKey: ${cloud.aws.credentials.accessKey}
#      secretKey: ${cloud.aws.credentials.secretKey}
#    s3: #버킷이름
#      bucket: ${cloud.aws.s3.bucket}
#    region: #S3 지역
#      static: ${cloud.aws.region.static}
#    stack:
#      auto: false

springdoc:
  packages-to-scan: kr.ac.kumoh.illdang100.tovalley
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: swagger-ui.html            # Swagger UI 경로 => localhost:8000/swagger-ui.html
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  cache:
    disabled: true

logging:
  level:
    '[kr.ac.kumoh.illdang100.tovalley]': INFO
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error